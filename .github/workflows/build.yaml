name: Build

on:
  push:
    tags:
      - "v*"

env:
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1

jobs:
  test:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl
            bin: make-xcso
            name: make-xcso-Linux-x86_64-musl.tar.gz

          - os_name: Linux-aarch64
            os: ubuntu-20.04
            target: aarch64-unknown-linux-musl
            bin: make-xcso
            name: make-xcso-Linux-aarch64-musl.tar.gz

          - os_name: Linux-arm
            os: ubuntu-20.04
            target: arm-unknown-linux-musleabi
            bin: make-xcso
            name: make-xcso-Linux-arm-musl.tar.gz

          - os_name: Linux-i686
            os: ubuntu-20.04
            target: i686-unknown-linux-musl
            bin: make-xcso
            name: make-xcso-Linux-i686-musl.tar.gz

          - os_name: Windows-i686
            os: windows-latest
            target: i686-pc-windows-msvc
            bin: make-xcso.exe
            name: make-xcso-Windows-i686.zip

          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: make-xcso.exe
            name: make-xcso-Windows-x86_64.zip

          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: make-xcso
            name: make-xcso-Darwin-x86_64.tar.gz

          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: make-xcso
            name: make-xcso-Darwin-aarch64.tar.gz
        toolchain:
          - stable

    steps:
      - uses: actions/checkout@v3

      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2

      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.name, 'musl')

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"
          strip: true

      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -

      - name: Publish release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: make-xcso-${{ matrix.platform.os_name }}
          path: "make-xcso-*"

      - name: Generate SHA-256
        run: shasum -a 256 ${{ matrix.platform.name }}
  
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "make-xcso-*"
          body_path: Changes.md